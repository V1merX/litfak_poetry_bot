// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/poem.go
//
// Generated by this command:
//
//	mockgen -source=./internal/services/poem.go -destination=./internal/services/mocks/poem_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/V1merX/litfak_poetry_bot/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockPoemRepository is a mock of PoemRepository interface.
type MockPoemRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPoemRepositoryMockRecorder
	isgomock struct{}
}

// MockPoemRepositoryMockRecorder is the mock recorder for MockPoemRepository.
type MockPoemRepositoryMockRecorder struct {
	mock *MockPoemRepository
}

// NewMockPoemRepository creates a new mock instance.
func NewMockPoemRepository(ctrl *gomock.Controller) *MockPoemRepository {
	mock := &MockPoemRepository{ctrl: ctrl}
	mock.recorder = &MockPoemRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPoemRepository) EXPECT() *MockPoemRepositoryMockRecorder {
	return m.recorder
}

// GetActualPoem mocks base method.
func (m *MockPoemRepository) GetActualPoem(ctx context.Context) (*domain.Poem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActualPoem", ctx)
	ret0, _ := ret[0].(*domain.Poem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActualPoem indicates an expected call of GetActualPoem.
func (mr *MockPoemRepositoryMockRecorder) GetActualPoem(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActualPoem", reflect.TypeOf((*MockPoemRepository)(nil).GetActualPoem), ctx)
}

// UpdateStatusSentPoem mocks base method.
func (m *MockPoemRepository) UpdateStatusSentPoem(ctx context.Context, poemID int64, is_sent bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatusSentPoem", ctx, poemID, is_sent)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStatusSentPoem indicates an expected call of UpdateStatusSentPoem.
func (mr *MockPoemRepositoryMockRecorder) UpdateStatusSentPoem(ctx, poemID, is_sent any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatusSentPoem", reflect.TypeOf((*MockPoemRepository)(nil).UpdateStatusSentPoem), ctx, poemID, is_sent)
}
