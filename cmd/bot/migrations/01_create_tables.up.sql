CREATE TABLE IF NOT EXISTS users (
	user_id SERIAL,
	telegram_id BIGINT UNIQUE,
	chat_id BIGINT UNIQUE,
	username VARCHAR(40) DEFAULT NULL UNIQUE, 
	first_name VARCHAR(40) DEFAULT NULL, 
	last_name VARCHAR(50) DEFAULT NULL,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS authors (
	author_id SERIAL PRIMARY KEY,
	first_name VARCHAR(40) DEFAULT NULL, 
	middle_name VARCHAR(40) DEFAULT NULL,
	last_name VARCHAR(50) DEFAULT NULL, 
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS poems (
	poem_id SERIAL PRIMARY KEY,
	name VARCHAR(800) NOT NULL,
	author_id INTEGER NOT NULL,
	text TEXT NOT NULL,
	meta TEXT DEFAULT NULL,
	is_sent BOOL DEFAULT false,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (author_id) 
	REFERENCES authors(author_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TYPE task_type AS ENUM ('task_1', 'task_2', 'task_3');

CREATE TABLE IF NOT EXISTS tasks (
	task_id SERIAL PRIMARY KEY,
	poem_id INTEGER NOT NULL,
	type task_type,
	text TEXT NOT NULL,
	answer VARCHAR(200) NOT NULL,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (poem_id)
	REFERENCES poems(poem_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE user_answers (
	answer_id SERIAL PRIMARY KEY,
	telegram_id BIGINT NOT NULL,
	task_id INTEGER NOT NULL,
	user_text TEXT NOT NULL,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

	FOREIGN KEY(telegram_id)
	REFERENCES users(telegram_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,

	FOREIGN KEY(task_id)
	REFERENCES tasks(task_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE INDEX idx_is_sent ON poems(is_sent);
CREATE INDEX idx_poems_author_id ON poems(author_id);
CREATE INDEX idx_tasks_poem_id ON tasks(poem_id);
CREATE INDEX idx_user_answers_telegram_id ON user_answers(telegram_id);
CREATE INDEX idx_user_answers_task_id ON user_answers(task_id);